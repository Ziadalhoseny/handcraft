// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using project_SWD.Data;

#nullable disable

namespace project_SWD.Migrations
{
    [DbContext(typeof(ApplicationDBcontext))]
    partial class ApplicationDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("order_contextpayment", b =>
                {
                    b.Property<int>("Order_Contextsdelivery_ID")
                        .HasColumnType("int");

                    b.Property<int>("Paymentspayment_ID")
                        .HasColumnType("int");

                    b.HasKey("Order_Contextsdelivery_ID", "Paymentspayment_ID");

                    b.HasIndex("Paymentspayment_ID");

                    b.ToTable("order_contextpayment");
                });

            modelBuilder.Entity("project_SWD.Models.category", b =>
                {
                    b.Property<int>("category_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("category_ID"), 1L, 1);

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("category_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("category_ID");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("project_SWD.Models.comment", b =>
                {
                    b.Property<int>("report_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("report_ID"), 1L, 1);

                    b.Property<int>("Shopping_Orderorder_ID")
                        .HasColumnType("int");

                    b.Property<int>("customer_ID")
                        .HasColumnType("int");

                    b.Property<int>("customer_ID4")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("order_ID4")
                        .HasColumnType("int");

                    b.Property<int>("payment_ID")
                        .HasColumnType("int");

                    b.Property<int>("payment_ID4")
                        .HasColumnType("int");

                    b.Property<int?>("product_ID")
                        .HasColumnType("int");

                    b.Property<int>("total_cost")
                        .HasColumnType("int");

                    b.HasKey("report_ID");

                    b.HasIndex("Shopping_Orderorder_ID");

                    b.HasIndex("customer_ID");

                    b.HasIndex("payment_ID");

                    b.HasIndex("product_ID");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("project_SWD.Models.customer", b =>
                {
                    b.Property<int>("customer_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customer_ID"), 1L, 1);

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("contact")
                        .HasColumnType("int");

                    b.Property<string>("customer_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customer_ID");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("project_SWD.Models.order_context", b =>
                {
                    b.Property<int>("delivery_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("delivery_ID"), 1L, 1);

                    b.Property<int>("Shopping_Orderorder_ID")
                        .HasColumnType("int");

                    b.Property<int>("customer_ID1")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("order_ID1")
                        .HasColumnType("int");

                    b.Property<int>("product_ID")
                        .HasColumnType("int");

                    b.Property<int>("product_ID1")
                        .HasColumnType("int");

                    b.HasKey("delivery_ID");

                    b.HasIndex("Shopping_Orderorder_ID");

                    b.HasIndex("product_ID");

                    b.ToTable("order_context");
                });

            modelBuilder.Entity("project_SWD.Models.payment", b =>
                {
                    b.Property<int>("payment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payment_ID"), 1L, 1);

                    b.Property<int>("customer_ID")
                        .HasColumnType("int");

                    b.Property<int>("customer_ID2")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("payment_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("payment_ID");

                    b.HasIndex("customer_ID");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("project_SWD.Models.product", b =>
                {
                    b.Property<int>("product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("product_ID"), 1L, 1);

                    b.Property<int>("categoryID")
                        .HasColumnType("int");

                    b.Property<string>("product_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("product_price")
                        .HasColumnType("int");

                    b.Property<int>("sellerID")
                        .HasColumnType("int");

                    b.HasKey("product_ID");

                    b.HasIndex("categoryID");

                    b.HasIndex("sellerID");

                    b.ToTable("products");
                });

            modelBuilder.Entity("project_SWD.Models.seller", b =>
                {
                    b.Property<int>("seller_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("seller_ID"), 1L, 1);

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("contact")
                        .HasColumnType("int");

                    b.Property<string>("seller_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("seller_ID");

                    b.ToTable("sellers");
                });

            modelBuilder.Entity("project_SWD.Models.shopping_order", b =>
                {
                    b.Property<int>("order_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_ID"), 1L, 1);

                    b.Property<int>("customerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("order_ID");

                    b.HasIndex("customerID");

                    b.ToTable("shopping_Orders");
                });

            modelBuilder.Entity("order_contextpayment", b =>
                {
                    b.HasOne("project_SWD.Models.order_context", null)
                        .WithMany()
                        .HasForeignKey("Order_Contextsdelivery_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project_SWD.Models.payment", null)
                        .WithMany()
                        .HasForeignKey("Paymentspayment_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("project_SWD.Models.comment", b =>
                {
                    b.HasOne("project_SWD.Models.shopping_order", "Shopping_Order")
                        .WithMany()
                        .HasForeignKey("Shopping_Orderorder_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project_SWD.Models.customer", "Customer")
                        .WithMany("comments")
                        .HasForeignKey("customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project_SWD.Models.payment", "Payment")
                        .WithMany()
                        .HasForeignKey("payment_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project_SWD.Models.product", null)
                        .WithMany("comments")
                        .HasForeignKey("product_ID");

                    b.Navigation("Customer");

                    b.Navigation("Payment");

                    b.Navigation("Shopping_Order");
                });

            modelBuilder.Entity("project_SWD.Models.order_context", b =>
                {
                    b.HasOne("project_SWD.Models.shopping_order", "Shopping_Order")
                        .WithMany("order_contexts")
                        .HasForeignKey("Shopping_Orderorder_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project_SWD.Models.product", "Product")
                        .WithMany("order_contexts")
                        .HasForeignKey("product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Shopping_Order");
                });

            modelBuilder.Entity("project_SWD.Models.payment", b =>
                {
                    b.HasOne("project_SWD.Models.customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("project_SWD.Models.product", b =>
                {
                    b.HasOne("project_SWD.Models.category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project_SWD.Models.seller", "seller")
                        .WithMany("Products")
                        .HasForeignKey("sellerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("seller");
                });

            modelBuilder.Entity("project_SWD.Models.shopping_order", b =>
                {
                    b.HasOne("project_SWD.Models.customer", "Customer")
                        .WithMany("Shopping_Orders")
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("project_SWD.Models.category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("project_SWD.Models.customer", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Shopping_Orders");

                    b.Navigation("comments");
                });

            modelBuilder.Entity("project_SWD.Models.product", b =>
                {
                    b.Navigation("comments");

                    b.Navigation("order_contexts");
                });

            modelBuilder.Entity("project_SWD.Models.seller", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("project_SWD.Models.shopping_order", b =>
                {
                    b.Navigation("order_contexts");
                });
#pragma warning restore 612, 618
        }
    }
}
